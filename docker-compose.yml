services:

  web_frontend:
    container_name: web_frontend
    image: "frontend:0.1.0"
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./frontend/:/var/www/html
    networks:
      - redcorss-network
  back_endapi:
    container_name: back_endapi
    image: "backend_api:0.1.0"
    restart: always
    ports:
      - "3000:3030"
    depends_on:
      - db
    networks:
      - redcorss-network
    env_file:
      - .env
  db:
    container_name: mysql_db
    image: mysql:9.2.0
    restart: always
    ports:
      - "3306:${MYSQL_PORT}"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USERNAME}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - redcorss-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 5
      
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin:5.2.2
    restart: always
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '8080:80'
    networks:
      - redcorss-network

  admin_dashboard:
    container_name: admin_dashboard
    image: "admin_dashboard:0.1.0"
    restart: always
    ports:
      - "3004:80"
    networks:
      - redcorss-network
    
  # grafana:
  #   container_name: grafana
  #   image: grafana/grafana:11.4.0-ubuntu
  #   restart: always
  #   ports:
  #     - '3003:3000'
  #   networks:
  #     - redcorss-network
  # prometheus:
  #   container_name: prometheus
  #   image: prom/prometheus:v3.1.0
  #   restart: always
  #   ports:
  #     - '9090:9090'
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - redcorss-network

networks:
  redcorss-network:
    driver: bridge

volumes:
  db_data:
